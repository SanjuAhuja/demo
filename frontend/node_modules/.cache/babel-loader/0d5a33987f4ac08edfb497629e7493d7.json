{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\yashhealth\\\\frontend\\\\src\\\\screens\\\\NewProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport res from \"express/lib/response\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewProductScreen = props => {\n  _s();\n\n  const [formData, setFormData] = useState({});\n\n  const submitHandler = async event => {\n    event.preventDefault();\n\n    if (Validate()) {\n      let config = {\n        headers: {\n          Authorization: localStorage.getItem('token')\n        }\n      };\n      const data = new FormData();\n      data.append(\"name\", formData.name);\n      data.append(\"image\", formData.image);\n      data.append(\"price\", formData.price);\n      data.append(\"category\", formData.category);\n      data.append(\"brand\", formData.brand);\n      data.append(\"countInStock\", formData.countInStock);\n      data.append(\"rating\", formData.rating);\n      data.append(\"description\", formData.description);\n      await axios.post('http://localhost:5000/api/products/', data, config).then(res => {\n        if (res.status === 200) {\n          alert('Record Added Successfully');\n          setFormData({});\n        }\n      }).catch(error => {\n        throw error;\n      });\n    } else {\n      alert('Please Fill required data');\n    }\n  };\n\n  const Validate = () => {\n    const fields = ['name', 'image', 'price', 'category', 'countInStock', 'brand', 'rating', 'description'];\n    const data = fields.filter(obj => formData[obj] === undefined || '');\n\n    if (data && data.length) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const handleChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setFormData(values => ({ ...values,\n      [name]: value\n    }));\n  };\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append('image', file);\n\n    try {\n      const {\n        data\n      } = await axios.post('/api/uploads', bodyFormData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setFormData(values => ({ ...values,\n        image: data\n      }));\n    } catch (error) {\n      res.error;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"New Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Enter name\",\n            value: formData.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"price\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"price\",\n            type: \"text\",\n            placeholder: \"Enter price\",\n            value: formData.price,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"imageFile\",\n            children: \"Image File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"imageFile\",\n            type: \"file\",\n            label: \"Choose Image\",\n            onChange: uploadFileHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"category\",\n            type: \"text\",\n            placeholder: \"Enter category\",\n            value: formData.category,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"brand\",\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"brand\",\n            type: \"text\",\n            placeholder: \"Enter brand\",\n            value: formData.brand,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"countInStock\",\n            children: \"Count In Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"countInStock\",\n            type: \"text\",\n            placeholder: \"Enter countInStock\",\n            value: formData.countInStock,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"rating\",\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"rating\",\n            type: \"text\",\n            placeholder: \"Enter rating\",\n            value: formData.rating,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"description\",\n            type: \"text\",\n            placeholder: \"Enter description\",\n            value: formData.description,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(NewProductScreen, \"CgHqyReD6jKK1NawX+yWoebGi8o=\");\n\n_c = NewProductScreen;\nexport default NewProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewProductScreen\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/yashhealth/frontend/src/screens/NewProductScreen.js"],"names":["useState","useEffect","axios","useHistory","res","NewProductScreen","props","formData","setFormData","submitHandler","event","preventDefault","Validate","config","headers","Authorization","localStorage","getItem","data","FormData","append","name","image","price","category","brand","countInStock","rating","description","post","then","status","alert","catch","error","fields","filter","obj","undefined","length","handleChange","target","value","values","uploadFileHandler","e","file","files","bodyFormData"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport res from \"express/lib/response\";\r\n\r\n\r\nconst NewProductScreen = (props) => {\r\n    const [formData, setFormData] = useState({});\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        if (Validate()) {\r\n            let config = {\r\n                headers: { Authorization: localStorage.getItem('token') }\r\n            }\r\n            const data = new FormData();\r\n            data.append(\"name\", formData.name)\r\n            data.append(\"image\", formData.image)\r\n            data.append(\"price\", formData.price)\r\n            data.append(\"category\", formData.category)\r\n            data.append(\"brand\", formData.brand)\r\n            data.append(\"countInStock\", formData.countInStock)\r\n            data.append(\"rating\", formData.rating)\r\n            data.append(\"description\", formData.description)\r\n\r\n            await axios.post('http://localhost:5000/api/products/', data, config).then((res) => {\r\n                if (res.status === 200) {\r\n                    alert('Record Added Successfully');\r\n                    setFormData({});\r\n                }\r\n            }).catch((error) => {\r\n                throw error;\r\n            });\r\n        } else {\r\n            alert('Please Fill required data')\r\n        }\r\n    };\r\n\r\n    const Validate = () => {\r\n        const fields = ['name','image', 'price', 'category', 'countInStock','brand', 'rating', 'description'];\r\n        const data = fields.filter((obj) => formData[obj] === undefined || '')\r\n        if (data && data.length) {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setFormData(values => ({ ...values, [name]: value }))\r\n    }\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const bodyFormData = new FormData();\r\n        bodyFormData.append('image', file);\r\n        try {\r\n          const { data } = await axios.post('/api/uploads', bodyFormData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n            },\r\n          });\r\n          setFormData(values => ({ ...values, image: data }));\r\n        } catch (error) {\r\n          res.error;\r\n        }\r\n      };\r\n\r\n   \r\n    return (\r\n        <>\r\n            <div>\r\n              <form className=\"form\" onSubmit={submitHandler}>\r\n              <div>\r\n                <h1>New Product</h1>\r\n              </div>\r\n                            <div>\r\n                            <label htmlFor=\"name\">Name</label>\r\n                                <input\r\n                                    id=\"name\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter name\"\r\n                                    value={formData.name}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                            <label htmlFor=\"price\">Price</label>\r\n                            <input\r\n                                    id=\"price\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter price\"\r\n                                    value={formData.price}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                            <label htmlFor=\"imageFile\">Image File</label>\r\n                            <input\r\n                                    id=\"imageFile\"\r\n                                    type=\"file\"\r\n                                    label=\"Choose Image\"\r\n                                    onChange={uploadFileHandler}\r\n                                />  \r\n                            </div>\r\n                            <div>\r\n                            <label htmlFor=\"category\">Category</label>\r\n                            <input\r\n                                    id=\"category\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter category\"\r\n                                    value={formData.category}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                            <label htmlFor=\"brand\">Brand</label>\r\n                            <input\r\n                                    id=\"brand\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter brand\"\r\n                                    value={formData.brand}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                            <label htmlFor=\"countInStock\">Count In Stock</label>\r\n                            <input\r\n                                    id=\"countInStock\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter countInStock\"\r\n                                    value={formData.countInStock}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                            <label htmlFor=\"rating\">Rating</label>\r\n                            <input\r\n                                    id=\"rating\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter rating\"\r\n                                    value={formData.rating}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                            <label htmlFor=\"description\">Description</label>\r\n                            <input\r\n                                    id=\"description\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter description\"\r\n                                    value={formData.description}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label></label>\r\n                                <button className=\"primary\" type=\"submit\">\r\n                                    Save\r\n                                </button>\r\n                            </div>\r\n                        </form>                           \r\n                   \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewProductScreen;"]},"metadata":{},"sourceType":"module"}